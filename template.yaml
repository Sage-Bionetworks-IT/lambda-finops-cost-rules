AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  A lambda for generating the JSON string used by the Rules property of an AWS::CE::CostCategory CloudFormation resource.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30

Parameters:
  DnsName:
    Type: String
    Description: Custom API host name
  AcmCertificateArn:
    Type: String
    Description: ARN of the ACM Certificate to use
  ChartOfAccountsURL:
    Type: String
    Description: URL to the chart of accounts endpoint provided by `lambda-mips-api`.
  ProgramCodeTagList:
    Description: Comma-separated list of tag names that may contain program-code assignment
    Type: String

Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration:
        Type: EDGE
      Domain:
        DomainName: !Ref DnsName
        CertificateArn: !Ref AcmCertificateArn
        EndpointConfiguration: EDGE

  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: False
        RestrictPublicBuckets: False

  OutputBucketPublicReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref OutputBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AllowPublicList"
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action:
              - "s3:List*"
            Resource: !Sub "arn:aws:s3:::${OutputBucket}"
          -
            Sid: "AllowPublicGet"
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action:
              - "s3:Get*"
            Resource: !Sub "arn:aws:s3:::${OutputBucket}/*"

  Function:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: cost_rules/program_codes.lambda_handler
      Runtime: python3.12
      Role: !GetAtt FunctionRole.Arn
      Environment:
        Variables:
          BucketName: !Ref OutputBucket
          ChartOfAccountsURL: !Ref ChartOfAccountsURL
          ProgramCodeTagList: !Ref ProgramCodeTagList
      Events:
        ProgramCodeRules:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /program-codes
            Method: get
            RestApiId: !Ref RestApi
        NightlyRun:
          Type: Schedule
          Properties:
            Schedule: 'cron(30 2 * * ? *)'

  FunctionRole:   # execute lambda function with this role
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Action:
                  - 'organizations:ListAccounts'
                  - 'organizations:ListTagsForResource'
                Effect: Allow
              - Resource: !Sub "arn:aws:s3:::${OutputBucket}/*"
                Action:
                  - "s3:*"
                Effect: Allow

Outputs:
  ApiDomain:
    Description: "API Gateway endpoint URL for Prod stage for function"
    Value: !Sub "${RestApi}.execute-api.${AWS::Region}.amazonaws.com"
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ApiDomain'
  ApiOrigin:
    Description: "API Gateway endpoint URL for Prod stage for function"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  ProgramCodeRulesEndpoint:
    Description: "Endpoint for listing Program Code rules"
    Value: !Sub "https://${DnsName}/program-codes"
  FunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt Function.Arn
  FunctionRoleArn:
    Description: "Implicit IAM Role created for function"
    Value: !GetAtt FunctionRole.Arn
